[tool.poetry]
name = "langchain-extract"
version = "0.0.1"
description = "Sample extraction backend."
authors = ["LangChain AI"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8.1"
langchain = "~0.1"
langsmith = ">=0.0.66"
fastapi = "^0.109.2"
langserve = "^0.0.45"
uvicorn = "^0.27.1"
pydantic = "^1.10"
langchain-openai = "^0.0.8"
jsonschema = "^4.21.1"
sse-starlette = "^2.0.0"
alembic = "^1.13.1"
psycopg2 = "^2.9.9"
python-magic = "^0.4.27"
pdfminer-six = "^20231228"
beautifulsoup4 = "^4.12.3"
lxml = "^5.1.0"
faiss-cpu = "^1.7.4"
python-multipart = "^0.0.9"
langchain-fireworks = "^0.1.1"

[tool.poetry.group.dev.dependencies]
jupyterlab = "^3.6.1"

[tool.poetry.group.typing.dependencies]
mypy = "^1.7.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.5"

[tool.poetry.group.docs.dependencies]
nbsphinx = ">=0.8.9"
sphinx = ">=5.2.0"
sphinx-autobuild = "^2021.3.14"
sphinx_book_theme = "^1.0.0"
myst-nb = { version = "^1.0.0", python = "^3.9" }
toml = "^0.10.2"
sphinx-copybutton = ">=0.5.1"


[tool.poetry.group.test.dependencies]
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.11.1"
pytest-socket = "^0.6.0"
pytest-watch = "^4.2.0"
pytest-timeout = "^2.2.0"


[tool.ruff]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "I",  # isort
]
extend-include = ["*.ipynb"]

# Same as Black.
line-length = 88

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"

[tool.coverage.run]
omit = [
    "tests/*",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# --strict-markers will raise errors on unknown marks.
# https://docs.pytest.org/en/7.1.x/how-to/mark.html#raising-errors-on-unknown-marks
#
# https://docs.pytest.org/en/7.1.x/reference/reference.html
# --strict-config       any warnings encountered while parsing the `pytest`
#                       section of the configuration file raise errors.
addopts = "--strict-markers --strict-config --durations=5 -vv"
# Global timeout for all tests. There shuold be a good reason for a test to
# take more than 5 second
timeout = 5
# Registering custom markers.
# https://docs.pytest.org/en/7.1.x/example/markers.html#registering-markers
markers = [
  "asyncio: mark tests as requiring asyncio",
]
asyncio_mode = "auto"
